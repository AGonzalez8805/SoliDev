services:
  # Service 'php'
  php:
    container_name: SoliDev_php 
    ports:
      - "90:80"
    volumes:
      - ./:/var/www/html 
    build:
      context: . 
      dockerfile: Dockerfile  
    depends_on:
      - db
      - mongodb
    networks:
      - app-network 

  # Service 'db' 
  db:
    image: mysql:latest
    container_name: SoliDev_mysql 
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} 
      MYSQL_DATABASE: ${MYSQL_DATABASE}  
      MYSQL_USER: ${MYSQL_USER}  
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}  
    ports:
      - "3306:3306"  
    volumes:
      - SoliDev-data:/var/lib/mysql 
    networks:
      - app-network 

  # Service 'mongodb'
  mongodb:
    image: mongo:7.0
    container_name: SoliDev_mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - SoliDev-mongodb_data:/data/db
    networks:
      - app-network

  # Service 'mongo-express'
  mongo-express:
    image: mongo-express
    container_name: SoliDev_mongo_express
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_EXPRESS_PASSWORD}@mongodb:27017/
      ME_CONFIG_BASICAUTH: "false"
    depends_on:
      - mongodb
    networks:
      - app-network

  # Service 'phpmyadmin'  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin  
    container_name: SoliDev_phpmyadmin  
    environment:
      PMA_HOST: ${PMA_HOST}  
      PMA_USER: ${PMA_USER}  
      PMA_PASSWORD: ${PMA_PASSWORD}  
    ports:
      - "9000:80"  
    depends_on:
      - db 
    networks:
      - app-network 

    

# Réseau utilisé par tous les services
networks:
  app-network:
# Volume pour sauvegarder les données
volumes:
  SoliDev-data:
  SoliDev-mongodb_data:
